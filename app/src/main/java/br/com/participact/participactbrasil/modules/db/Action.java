package br.com.participact.participactbrasil.modules.db;

import org.greenrobot.greendao.annotation.*;

import java.util.List;
import br.com.participact.participactbrasil.modules.db.DaoSession;
import org.greenrobot.greendao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.

/**
 * Entity mapped to table "ACTION".
 */
import com.google.gson.annotations.SerializedName;
@Entity(active = true)
public class Action {

    @Id
    private Long id;
    private String name;
    @SerializedName("numeric_threshold")
    private Integer minimum;
    @SerializedName("input_type")
    private Integer inputType;
    private String type;
    private String title;
    private Long sensorDuration;
    @SerializedName("description")
    private String actionDescription;
    private Long campaignId;
    private Boolean sensorWeekSun;
    private Boolean sensorWeekMon;
    private Boolean sensorWeekTue;
    private Boolean sensorWeekWed;
    private Boolean sensorWeekThu;
    private Boolean sensorWeekFri;
    private Boolean sensorWeekSat;
    private Boolean repeat;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient ActionDao myDao;

    @ToMany(joinProperties = {
        @JoinProperty(name = "id", referencedName = "actionId")
    })
    private List<Question> questions;

    @Generated
    public Action() {
    }

    public Action(Long id) {
        this.id = id;
    }

    @Generated
    public Action(Long id, String name, Integer minimum, Integer inputType, String type, String title, Long sensorDuration, String actionDescription, Long campaignId, Boolean sensorWeekSun, Boolean sensorWeekMon, Boolean sensorWeekTue, Boolean sensorWeekWed, Boolean sensorWeekThu, Boolean sensorWeekFri, Boolean sensorWeekSat, Boolean repeat) {
        this.id = id;
        this.name = name;
        this.minimum = minimum;
        this.inputType = inputType;
        this.type = type;
        this.title = title;
        this.sensorDuration = sensorDuration;
        this.actionDescription = actionDescription;
        this.campaignId = campaignId;
        this.sensorWeekSun = sensorWeekSun;
        this.sensorWeekMon = sensorWeekMon;
        this.sensorWeekTue = sensorWeekTue;
        this.sensorWeekWed = sensorWeekWed;
        this.sensorWeekThu = sensorWeekThu;
        this.sensorWeekFri = sensorWeekFri;
        this.sensorWeekSat = sensorWeekSat;
        this.repeat = repeat;
    }

    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getActionDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getMinimum() {
        return minimum;
    }

    public void setMinimum(Integer minimum) {
        this.minimum = minimum;
    }

    public Integer getInputType() {
        return inputType;
    }

    public void setInputType(Integer inputType) {
        this.inputType = inputType;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Long getSensorDuration() {
        return sensorDuration;
    }

    public void setSensorDuration(Long sensorDuration) {
        this.sensorDuration = sensorDuration;
    }

    public String getActionDescription() {
        return actionDescription;
    }

    public void setActionDescription(String actionDescription) {
        this.actionDescription = actionDescription;
    }

    public Long getCampaignId() {
        return campaignId;
    }

    public void setCampaignId(Long campaignId) {
        this.campaignId = campaignId;
    }

    public Boolean getSensorWeekSun() {
        return sensorWeekSun;
    }

    public void setSensorWeekSun(Boolean sensorWeekSun) {
        this.sensorWeekSun = sensorWeekSun;
    }

    public Boolean getSensorWeekMon() {
        return sensorWeekMon;
    }

    public void setSensorWeekMon(Boolean sensorWeekMon) {
        this.sensorWeekMon = sensorWeekMon;
    }

    public Boolean getSensorWeekTue() {
        return sensorWeekTue;
    }

    public void setSensorWeekTue(Boolean sensorWeekTue) {
        this.sensorWeekTue = sensorWeekTue;
    }

    public Boolean getSensorWeekWed() {
        return sensorWeekWed;
    }

    public void setSensorWeekWed(Boolean sensorWeekWed) {
        this.sensorWeekWed = sensorWeekWed;
    }

    public Boolean getSensorWeekThu() {
        return sensorWeekThu;
    }

    public void setSensorWeekThu(Boolean sensorWeekThu) {
        this.sensorWeekThu = sensorWeekThu;
    }

    public Boolean getSensorWeekFri() {
        return sensorWeekFri;
    }

    public void setSensorWeekFri(Boolean sensorWeekFri) {
        this.sensorWeekFri = sensorWeekFri;
    }

    public Boolean getSensorWeekSat() {
        return sensorWeekSat;
    }

    public void setSensorWeekSat(Boolean sensorWeekSat) {
        this.sensorWeekSat = sensorWeekSat;
    }

    public Boolean getRepeat() {
        return repeat;
    }

    public void setRepeat(Boolean repeat) {
        this.repeat = repeat;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    @Generated
    public List<Question> getQuestions() {
        if (questions == null) {
            __throwIfDetached();
            QuestionDao targetDao = daoSession.getQuestionDao();
            List<Question> questionsNew = targetDao._queryAction_Questions(id);
            synchronized (this) {
                if(questions == null) {
                    questions = questionsNew;
                }
            }
        }
        return questions;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    @Generated
    public synchronized void resetQuestions() {
        questions = null;
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

}
